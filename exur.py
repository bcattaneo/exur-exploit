import requests as r
import re
# from requests_toolbelt.utils import dump
from time import sleep

class Exur:
    # Shipping URLs
    SHIPPING_URL = "https://www.exurenvios.com/Sistema/Consulta-envio-detalle-completo-redirect.aspx?CodEnvio=%s"
    LOGIN_URL = "https://www.exurenvios.com/Index.aspx"

    # General stuff
    ENCODING = "UTF-8"
    DELAY = 2
    NOT_LOGGED_IN = "Not logged in"

    # Params and regex
    HIDDEN_PARAMS = ["__VIEWSTATE", "__VIEWSTATEGENERATOR", "__EVENTVALIDATION"]
    HIDDEN_PARAMS_REGEX = "<input type=\"hidden\" name=\"%s\" id=\"%s\" value=\"(.*)\""
    SESSION_COOKIE_NAME = "WebCourier"
    SHIPPING_PARAMS = [
        ["ctl00_ContentPlaceHolder1_lblNombreRemitente", "sender_name"],
        ["ctl00_ContentPlaceHolder1_lblDireccionRemitente", "sender_address"],
        ["ctl00_ContentPlaceHolder1_lblCiudadEstadoRemitente", "sender_city"],
        ["ctl00_ContentPlaceHolder1_lblTelefonoRemitente", "sender_phone"],
        ["ctl00_ContentPlaceHolder1_lblCelularRemitente", "sender_mobile"],
        ["ctl00_ContentPlaceHolder1_lblNombreDestinatario", "recipient_name"],
        ["ctl00_ContentPlaceHolder1_lblDireccionDestinatario", "recipient_address"],
        ["ctl00_ContentPlaceHolder1_lblCiudadEstadoDestinatario", "recipient_city"],
        ["ctl00_ContentPlaceHolder1_lblTelefonoDestinatario", "recipient_phone"],
        ["ctl00_ContentPlaceHolder1_lblCelularDestinatario", "recipient_mobile"],
        ["ctl00_ContentPlaceHolder1_lblFormaPago", "way_to_pay"],
        ["ctl00_ContentPlaceHolder1_lblMedioPago", "payment_method"],
        ["ctl00_ContentPlaceHolder1_lblPesoFacturar", "shipping_weight"],
        ["ctl00_ContentPlaceHolder1_lblImporteTotal", "total"],
        ["ctl00_ContentPlaceHolder1_lblNroFacturaUy", "bill_number"],
        ["ctl00_ContentPlaceHolder1_lblValorDeclarado", "declared_value"],
        ["ctl00_ContentPlaceHolder1_lblDeclaracionAduana", "customs_declaration"]
    ]
    SHIPPING_STATUS_FIELD = "shipping_status"
    SHIPPING_STATUS_REGEX = "<span id=\"ctl00_ContentPlaceHolder1_lblEstadoEnvio\"><span style='font-family:Arial; color:blue; font-weight:bold;'>(.*)<\\/span><\\/span>"
    SHIPPING_PARAMS_REGEX = "<span id=\"%s\">(.*)<\\/span>"
    FINAL_CLIENT_FIELD = "delivered_to_client"
    FINAL_CLIENT_REGEX = "<td>Entregado al Cliente: ([A-Z.0-9()\\s-]*)<\\/td>"

    def __init__(self, username, password):
        '''Default constructor'''

        self.username = username
        self.password = password
        self.__cookies = {}

    def __get_shipping_raw(self, number):
        '''Returns page content of a shipping page'''

        if not self.logged_in():
            raise Exception(Exur.NOT_LOGGED_IN)

        response = r.get(Exur.SHIPPING_URL % number, cookies=self.__cookies)
        # print(dump.dump_all(response).decode("UTF-8"))
        return response.content.decode(Exur.ENCODING)

    def get_shipping(self, number):
        '''Returns a dict with shipping information

        Requests a shipping page's content and builds
        a dict with all needed fields
        '''
        data = {}

        body = self.__get_shipping_raw(number)
        
        # Shipping info.
        for name in Exur.SHIPPING_PARAMS:
            regex = Exur.SHIPPING_PARAMS_REGEX % (name[0])
            g = re.search(regex, body)
            if g != None:
                data[name[1]] = g.group(1)

        # We get this field if it was
        # already delivered
        regex = Exur.FINAL_CLIENT_REGEX
        g = re.search(regex, body)
        if g != None:
            data[Exur.FINAL_CLIENT_FIELD] = g.group(1)

        # Shipping status
        regex = Exur.SHIPPING_STATUS_REGEX
        g = re.search(regex, body)
        if g != None:
            data[Exur.SHIPPING_STATUS_FIELD] = g.group(1)

        return data

    def logged_in(self):
        '''Returns true if the client has logged
        in successfully'''

        return self.__cookies.get(Exur.SESSION_COOKIE_NAME, "") != ""


    def log_in(self):
        '''Returns true if logged in successfully

        Attempts to log-in to exur and sets all
        needed cookies that needs to be sent with
        each request
        '''

        login_params = {
            "LoginMaster$UserName": self.username,
            "LoginMaster$Password": self.password,
            "LoginMaster$LoginButton": "Ingresar",
            "idioma": "ES",
            "ddlTipo": "0",
            "txtNumero": "",
            "__EVENTTARGET": "",
            "__EVENTARGUMENT": "",
            "__VIEWSTATE": "",
            "__VIEWSTATEGENERATOR": "",
            "__EVENTVALIDATION": "",
        }

        # Get ASP session cookie ("ASP.NET_SessionId")
        response = r.get(Exur.LOGIN_URL)
        self.__cookies = response.cookies.get_dict().copy()
        body = response.content.decode(Exur.ENCODING)

        # Get hidden parameters that need to be sent
        # with each request
        for name in Exur.HIDDEN_PARAMS:
            regex = Exur.HIDDEN_PARAMS_REGEX % (name, name)
            g = re.search(regex, body)
            if g != None:
                login_params[name] = g.group(1)

        sleep(Exur.DELAY)

        # Get POST response without redirect, so we can
        # get the "WebCourier" session cookie
        response = r.post(Exur.LOGIN_URL, cookies=self.__cookies, data=login_params, allow_redirects=False)
        try:
            self.__cookies[Exur.SESSION_COOKIE_NAME] = response.cookies.get_dict()[Exur.SESSION_COOKIE_NAME]
        except:
            return False

        return self.logged_in()